version: '3'

services:

  gtfs_realtime_listener:
    container_name: gtfs_realtime_listener
    build: ./gtfsRealTimeListener
    volumes:
      - "./gtfsRealTimeListener:/usr/gtfs_realtime_listener"
    env_file:
      - .env
    ports:
      - 3003:3003
    depends_on:
      - spatial-temporal-data

  weather_service:
    container_name: weather_service
    build: ./weatherService
    command: npm start
    volumes:
      - "./weatherService:/usr/weather_service"
    ports:
      - 3001:3001
    env_file:
      - .env
    environment:
      - TEST_ENV_VAL=${OPENWEATHERMAP_API}
    depends_on:
      - spatial-temporal-data

  distance_calculator_service:
    container_name: distance_calculator_service
    build: ./distanceCalculatorService
    command: npm start
    volumes:
      - "./distanceCalculatorService:/usr/distance_calculator_service"
    ports:
      - 3002:3002

  spatial-temporal-data:
    container_name: spatial-temporal-data
    image: "mdillon/postgis"
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
    - 54321:${POSTGRES_PORT}
    volumes:
      # File container for the DB
      - ./postgres-data:/var/lib/postgresql/data
      # DB initialization files. Postgis image has to execute 'postgis.sh' first,
      # so we have to name our scripts 'q*'. This is because scripts are executed
      # in alphabetic order in the docker-entrypoint-initdb.d/ folder
      - ./dbDesign/table_creation.sql:/docker-entrypoint-initdb.d/q-init-1.sql
      - ./dbDesign/table_add_constraints.sql:/docker-entrypoint-initdb.d/q-init-2.sql